{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","redux/selectors.js","redux/operations.js","components/Form/Form.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/Contacts.js","redux/actions.js","components/Filter/Filter.js","components/App/App.js","redux/reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","fetchContactOperacion","createAsyncThunk","a","axios","get","data","addContactOperacion","contact","post","deleteContactOperacion","id","delete","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleNameChange","e","target","value","onSubmit","preventDefault","uuidv4","find","alert","className","style","formSection","formLabel","onChange","type","pattern","title","required","formBtn","ContactItem","contactsButton","onClick","Contacts","visibleContacts","useEffect","contactsList","length","map","changeFilter","createAction","Filter","actions","App","createReducer","fulfilled","payload","_","itemsError","rejected","pending","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b5b058a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__2L2Fe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsButton\":\"ContactItem_contactsButton__3G4Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsHead\":\"Filter_contactsHead__1A6Gu\"};","import { createSelector } from \"@reduxjs/toolkit\";\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchContactOperacion = createAsyncThunk(\n  \"contacts/fetch\",\n  async () => {\n    const { data } = await axios.get(\"http://localhost:7777/contacts\");\n    return data;\n  }\n);\n\nexport const addContactOperacion = createAsyncThunk(\n  \"contacts/add\",\n  async (contact) => {\n    const { data } = await axios.post(\n      \"http://localhost:7777/contacts\",\n      contact\n    );\n    return data;\n  }\n);\n\nexport const deleteContactOperacion = createAsyncThunk(\n  \"contacts/delete\",\n  async (id) => {\n    await axios.delete(`http://localhost:7777/contacts/${id}`);\n    return id;\n  }\n);\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./Form.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/selectors\";\nimport { addContactOperacion } from \"../../redux/operations\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleNameChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    // const newContact = { name, number, id };\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContactOperacion({ name, number, id }));\n\n    formReset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.formSection}>\n      <label className={style.formLabel}>\n        Name{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={style.formLabel}>\n        Phone{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифер и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={style.formBtn}>\n        Save\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport style from \"./ContactItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContactOperacion } from \"../../../redux/operations\";\n\nfunction ContactItem({ name, id, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className=\"\">\n      <p className=\"\">{name}:</p>\n      <p>{number}</p>\n      <button\n        className={style.contactsButton}\n        onClick={() => dispatch(deleteContactOperacion(id))}\n      >\n        delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport style from \"./Contacts.module.css\";\nimport ContactItem from \"./ContactItem/ContactItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport { fetchContactOperacion } from \"../../redux/operations\";\n\nfunction Contacts() {\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactOperacion());\n  }, [dispatch]);\n\n  return (\n    <section className={style.contacts}>\n      <ul className={style.contactsList}>\n        {visibleContacts.length > 0 &&\n          visibleContacts.map(({ name, number, id }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Contacts;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import style from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport * as actions from \"../../redux/actions\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  return (\n    <label className={style.filter}>\n      Find contact by name{\" \"}\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import \"./App.css\";\nimport Form from \"../Form/Form\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nfunction App() {\n  return (\n    <section className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <Form />\n\n      <h2 className=\"contactsHead\">Contacts </h2>\n      <Filter />\n      <Contacts />\n    </section>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\nimport {\n  addContactOperacion,\n  deleteContactOperacion,\n  fetchContactOperacion,\n} from \"./operations\";\n\nconst items = createReducer([], {\n  [addContactOperacion.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContactOperacion.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [fetchContactOperacion.fulfilled]: (_, { payload }) => payload,\n});\n\nconst itemsError = createReducer(null, {\n  [addContactOperacion.rejected]: (_, { payload }) => payload,\n  [addContactOperacion.pending]: () => null,\n\n  [deleteContactOperacion.rejected]: (_, { payload }) => payload,\n  [deleteContactOperacion.pending]: () => null,\n\n  [fetchContactOperacion.rejected]: (_, { payload }) => payload,\n  [fetchContactOperacion.pending]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  itemsError,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./reducer\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"Form_formSection__niCxj\",\"formLabel\":\"Form_formLabel__34G0Y\",\"formBtn\":\"Form_formBtn__4Opdq\"};"],"sourceRoot":""}